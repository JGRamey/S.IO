services:
  postgres:
    image: postgres:15
    container_name: s-io-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5431:5431"  # External port 5431, internal port 5431 (standardized)
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    container_name: s-io-qdrant
    ports:
      - "6333:6333"
      - "6334:6334" 
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: ${QDRANT_PORT}
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD-SHELL", "netstat -an | grep ${QDRANT_PORT} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  s-io:
    build: 
      context: ../../
      dockerfile: deployment/docker/Dockerfile
    container_name: s-io-app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      # Temporarily remove qdrant health check dependency
      qdrant:
        condition: service_started
    environment:
      DATABASE_URL: ${DATABASE_URL}
      QDRANT_URL: ${QDRANT_URL}
      DEBUG: ${DEBUG}
      LOG_LEVEL: ${LOG_LEVEL}
      SECRET_KEY: ${SECRET_KEY}
      HF_MODEL_NAME: ${HF_MODEL_NAME}
      HF_EMBEDDING_MODEL: ${HF_EMBEDDING_MODEL}
      EMBEDDING_DIMENSION: ${EMBEDDING_DIMENSION}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    command: ["python", "-m", "yggdrasil.api.main"]

volumes:
  postgres_data:
  qdrant_data:
