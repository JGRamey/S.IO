"""Create documents table and enable pgvector

Revision ID: e1847fb660ca
Revises: 
Create Date: 2025-06-17 20:08:47.656019

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e1847fb660ca'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute('CREATE EXTENSION IF NOT EXISTS vector;')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=1536), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index(op.f('idx_domain'), table_name='scraped_data')
    op.drop_index(op.f('idx_llm_domain'), table_name='scraped_data')
    op.drop_index(op.f('idx_unique_url'), table_name='scraped_data')
    op.drop_table('scraped_data')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scraped_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('domain', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('text_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('html_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('quality_score', sa.REAL(), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('llm_domain', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('scraped_data_pkey'))
    )
    op.create_index(op.f('idx_unique_url'), 'scraped_data', ['url'], unique=True)
    op.create_index(op.f('idx_llm_domain'), 'scraped_data', ['llm_domain'], unique=False)
    op.create_index(op.f('idx_domain'), 'scraped_data', ['domain'], unique=False)
    op.drop_table('documents')
    # ### end Alembic commands ###
